{
  "info": {
    "_postman_id": "e0d8f993-94cd-4f1e-8910-87d422f42d89",
    "name": "Cue Wellness - API Collection (Organized by Module)",
    "description": "Postman collection reorganized into module folders (OTP, Admin, Coach, Activities). Each request includes 'For' info indicating intended user/role. Based on provided project files.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "36771282"
  },
  "item": [
    {
      "name": "OTP",
      "item": [
        {
          "name": "Send OTP",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"phone\": \"+971501234567\",\n  \"userType\": \"coach\",\n  \"operation\": \"login\",\n  \"meta\": {\n    \"ip\": \"{{pm.request.ip}}\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/otp/send",
              "host": ["{{baseUrl}}"],
              "path": ["otp", "send"]
            },
            "description": "For: Public (clients/coaches). Send OTP to provided phone. Returns encrypted otpId."
          },
          "response": []
        },
        {
          "name": "Verify OTP",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"otpId\": \"{{otpId}}\",\n  \"otp\": \"123456\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/otp/verify",
              "host": ["{{baseUrl}}"],
              "path": ["otp", "verify"]
            },
            "description": "For: Public. Verify OTP."
          },
          "response": []
        },
        {
          "name": "Resend OTP",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"otpId\": \"{{otpId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/otp/resend",
              "host": ["{{baseUrl}}"],
              "path": ["otp", "resend"]
            },
            "description": "For: Public. Resend OTP for provided encrypted otpId. Uses validateOtpId middleware."
          },
          "response": []
        }
      ]
    },
    {
      "name": "Admin",
      "item": [
        {
          "name": "Login (Admin)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"mobile\": \"+911234567890\",\n  \"password\": \"Password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/admin/login",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "login"]
            },
            "description": "For: Admin. Login with mobile + password. Returns accessToken and sets RefreshToken cookie."
          },
          "response": []
        },
        {
          "name": "Refresh Access Token (Admin)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Cookie",
                "value": "RefreshToken={{refreshToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{baseUrl}}/admin/refresh",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "refresh"]
            },
            "description": "For: Admin. Use refresh token (cookie or body) to obtain new access token."
          },
          "response": []
        },
        {
          "name": "Logout (Admin)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refreshToken\": \"{{refreshToken}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/admin/logout",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "logout"]
            },
            "description": "For: Admin. Logout and revoke refresh token."
          },
          "response": []
        },
        {
          "name": "Add Admin",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminAccessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"New Admin\",\n  \"mobile\": \"+911234000000\",\n  \"email\": \"new@cue.com\",\n  \"password\": \"Password123\",\n  \"designation\": \"Manager\",\n  \"permissions\": []\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/admin/add",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "add"]
            },
            "description": "For: Admin (superAdmin or permitted). Create a new admin."
          },
          "response": []
        },
        {
          "name": "List Admins",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminAccessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/admin/list",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "list"]
            },
            "description": "For: Admin. List admins (query: page, limit)."
          },
          "response": []
        },
        {
          "name": "Get Admin by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminAccessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/admin/get/{{adminId}}",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "get", "{{adminId}}"]
            },
            "description": "For: Admin. Get admin details by id."
          },
          "response": []
        },
        {
          "name": "Update Admin",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminAccessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Name\",\n  \"mobile\": \"+911234567891\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/admin/update/{{adminId}}",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "update", "{{adminId}}"]
            },
            "description": "For: Admin. Update admin by id."
          },
          "response": []
        },
        {
          "name": "Delete Admin",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminAccessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/admin/delete/{{adminId}}",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "delete", "{{adminId}}"]
            },
            "description": "For: Admin. Delete admin by id."
          },
          "response": []
        }
      ]
    },
    {
      "name": "Coach",
      "item": [
        {
          "name": "Signup (Coach)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Coach One\",\n  \"mobile\": \"+971501234567\",\n  \"password\": \"Password123\",\n  \"agree_terms_conditions\": true,\n  \"agree_privacy_policy\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/coach/signup",
              "host": ["{{baseUrl}}"],
              "path": ["coach", "signup"]
            },
            "description": "For: Public. Create unverified coach account. Returns encrypted legacyToken."
          },
          "response": []
        },
        {
          "name": "Verify OTP (Coach flow)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"otpId\": \"{{otpId}}\",\n  \"otp\": \"123456\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/coach/verify-otp",
              "host": ["{{baseUrl}}"],
              "path": ["coach", "verify-otp"]
            },
            "description": "For: Coach (public). Verify OTP to complete signup/login. Returns accessToken and sets CoachRefreshToken cookie."
          },
          "response": []
        },
        {
          "name": "Login (Coach)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"mobile\": \"+971501234567\",\n  \"password\": \"Password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/coach/login",
              "host": ["{{baseUrl}}"],
              "path": ["coach", "login"]
            },
            "description": "For: Coach. Login via mobile + password."
          },
          "response": []
        },
        {
          "name": "Refresh Access Token (Coach)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Cookie",
                "value": "CoachRefreshToken={{coachRefreshToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{baseUrl}}/coach/refresh-token",
              "host": ["{{baseUrl}}"],
              "path": ["coach", "refresh-token"]
            },
            "description": "For: Coach. Exchange CoachRefreshToken for new access token."
          },
          "response": []
        },
        {
          "name": "Logout (Coach - revoke current)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{coachAccessToken}}"
              },
              {
                "key": "Cookie",
                "value": "CoachRefreshToken={{coachRefreshToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{baseUrl}}/coach/logout",
              "host": ["{{baseUrl}}"],
              "path": ["coach", "logout"]
            },
            "description": "For: Coach. Revoke the current refresh token."
          },
          "response": []
        },
        {
          "name": "Logout All Devices (Coach)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{coachAccessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{baseUrl}}/coach/logout-all",
              "host": ["{{baseUrl}}"],
              "path": ["coach", "logout-all"]
            },
            "description": "For: Coach. Clears all refresh tokens for authenticated coach."
          },
          "response": []
        },
        {
          "name": "Check Cookie / Token (Coach)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{coachAccessToken}}"
              },
              {
                "key": "Cookie",
                "value": "CoachRefreshToken={{coachRefreshToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{baseUrl}}/coach/check-cookie",
              "host": ["{{baseUrl}}"],
              "path": ["coach", "check-cookie"]
            },
            "description": "For: Coach. Validates access token or exchanges refresh cookie for access token."
          },
          "response": []
        },
        {
          "name": "Check Mobile Availability",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"mobile\": \"+971501234567\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/coach/check-mobile",
              "host": ["{{baseUrl}}"],
              "path": ["coach", "check-mobile"]
            },
            "description": "For: Public. Check whether mobile number is available for registration."
          },
          "response": []
        },
        {
          "name": "Forget Password (Coach)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"mobile\": \"+971501234567\",\n  \"newPassword\": \"NewPass123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/coach/forget-password",
              "host": ["{{baseUrl}}"],
              "path": ["coach", "forget-password"]
            },
            "description": "For: Coach. Reset password using mobile + newPassword."
          },
          "response": []
        },
        {
          "name": "Get Profile (Me)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{coachAccessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/coach/me",
              "host": ["{{baseUrl}}"],
              "path": ["coach", "me"]
            },
            "description": "For: Authenticated Coach. Get own profile."
          },
          "response": []
        },
        {
          "name": "Update Profile (PUT /me)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{coachAccessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Coach New\",\n  \"email\": \"coach@example.com\",\n  \"city\": \"Dubai\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/coach/me",
              "host": ["{{baseUrl}}"],
              "path": ["coach", "me"]
            },
            "description": "For: Authenticated Coach. Update your profile fields."
          },
          "response": []
        },
        {
          "name": "Delete Coach (DELETE /delete/:id)",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{coachAccessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/coach/delete/{{coachId}}",
              "host": ["{{baseUrl}}"],
              "path": ["coach", "delete", "{{coachId}}"]
            },
            "description": "For: Authenticated Coach or Admin with proper permission to delete a coach."
          },
          "response": []
        },
        {
          "name": "Update Password (PUT /updatePassword/:id)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{coachAccessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"oldPassword\": \"Password123\",\n  \"newPassword\": \"NewPass123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/coach/updatePassword/{{coachId}}",
              "host": ["{{baseUrl}}"],
              "path": ["coach", "updatePassword", "{{coachId}}"]
            },
            "description": "For: Authenticated Coach. Change password by providing old + new."
          },
          "response": []
        },
        {
          "name": "Profile Setup (PATCH /profile-setup)",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{coachAccessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": \"{{coachId}}\",\n  \"email\": \"coach@example.com\",\n  \"dob\": \"01-15-1990\",\n  \"gender\": \"male\",\n  \"city\": \"Dubai\",\n  \"pincode\": 12345\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/coach/profile-setup",
              "host": ["{{baseUrl}}"],
              "path": ["coach", "profile-setup"]
            },
            "description": "For: Authenticated Coach. Complete profile details."
          },
          "response": []
        },
        {
          "name": "Save Story (PATCH /story)",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{coachAccessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": \"{{coachId}}\",\n  \"story\": \"I help people...\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/coach/story",
              "host": ["{{baseUrl}}"],
              "path": ["coach", "story"]
            },
            "description": "For: Authenticated Coach. Save short story/bio."
          },
          "response": []
        },
        {
          "name": "Agreement Terms (PATCH /agreement-terms)",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{coachAccessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": \"{{coachId}}\",\n  \"agreement_terms\": [\n    {\n      \"type\": \"text\",\n      \"content\": \"Clause 1\"\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/coach/agreement-terms",
              "host": ["{{baseUrl}}"],
              "path": ["coach", "agreement-terms"]
            },
            "description": "For: Authenticated Coach. Update agreement terms."
          },
          "response": []
        },
        {
          "name": "Upload Profile Picture (multipart)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{coachAccessToken}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "profilePicture",
                  "value": "",
                  "type": "file"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/coach/upload/profile-picture",
              "host": ["{{baseUrl}}"],
              "path": ["coach", "upload", "profile-picture"]
            },
            "description": "For: Authenticated Coach. Upload profile picture (form key profilePicture)."
          },
          "response": []
        },
        {
          "name": "Upload Certificates (multipart)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{coachAccessToken}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "id",
                  "value": "{{coachId}}",
                  "type": "text"
                },
                {
                  "key": "index",
                  "value": "0",
                  "type": "text"
                },
                {
                  "key": "certificates",
                  "value": "",
                  "type": "file"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/coach/upload/certificates",
              "host": ["{{baseUrl}}"],
              "path": ["coach", "upload", "certificates"]
            },
            "description": "For: Authenticated Coach. Upload certificates (provide id and index fields matching files)."
          },
          "response": []
        },
        {
          "name": "Upload Work Assets (multipart PATCH)",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{coachAccessToken}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "id",
                  "value": "{{coachId}}",
                  "type": "text"
                },
                {
                  "key": "index",
                  "value": "0",
                  "type": "text"
                },
                {
                  "key": "workAsset",
                  "value": "",
                  "type": "file"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/coach/upload/work-assets",
              "host": ["{{baseUrl}}"],
              "path": ["coach", "upload", "work-assets"]
            },
            "description": "For: Authenticated Coach. Upload images/videos as work assets (max 3)."
          },
          "response": []
        },
        {
          "name": "Save Agreement (POST /save-agreement)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{coachAccessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Service Agreement\",\n  \"content\": [\n    {\n      \"type\": \"text\",\n      \"content\": \"Terms...\"\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/coach/save-agreement",
              "host": ["{{baseUrl}}"],
              "path": ["coach", "save-agreement"]
            },
            "description": "For: Authenticated Coach. Save agreement content."
          },
          "response": []
        },
        {
          "name": "Save Pricing Slots (POST /save-pricing-slots)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{coachAccessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"categoryId\": \"cat123\",\n  \"sessionKey\": \"standard\",\n  \"level\": \"beginner\",\n  \"payload\": {\n    \"price\": 50,\n    \"currency\": \"USD\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/coach/save-pricing-slots",
              "host": ["{{baseUrl}}"],
              "path": ["coach", "save-pricing-slots"]
            },
            "description": "For: Authenticated Coach. Save pricing/session slot payload."
          },
          "response": []
        },
        {
          "name": "Like Activity (POST /like-activity)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{coachAccessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": \"{{someId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/coach/like-activity",
              "host": ["{{baseUrl}}"],
              "path": ["coach", "like-activity"]
            },
            "description": "For: Authenticated Coach. Like an activity by id."
          },
          "response": []
        },
        {
          "name": "Dislike Activity (POST /dislike-activity)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{coachAccessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": \"{{someId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/coach/dislike-activity",
              "host": ["{{baseUrl}}"],
              "path": ["coach", "dislike-activity"]
            },
            "description": "For: Authenticated Coach. Remove like for activity."
          },
          "response": []
        },
        {
          "name": "Save Coach (POST /save-coach)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{coachAccessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": \"{{someId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/coach/save-coach",
              "host": ["{{baseUrl}}"],
              "path": ["coach", "save-coach"]
            },
            "description": "For: Authenticated Coach. Save another coach (favorite) by id."
          },
          "response": []
        },
        {
          "name": "Unsave Coach (POST /unsave-coach)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{coachAccessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": \"{{someId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/coach/unsave-coach",
              "host": ["{{baseUrl}}"],
              "path": ["coach", "unsave-coach"]
            },
            "description": "For: Authenticated Coach. Remove saved coach."
          },
          "response": []
        },
        {
          "name": "Admin: List Coaches (GET /admin/list)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminAccessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/coach/admin/list",
              "host": ["{{baseUrl}}"],
              "path": ["coach", "admin", "list"]
            },
            "description": "For: Admin. List coaches (query page, limit, status, q)."
          },
          "response": []
        },
        {
          "name": "Admin: Get Coach (GET /admin/get/:id)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminAccessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/coach/admin/get/{{coachId}}",
              "host": ["{{baseUrl}}"],
              "path": ["coach", "admin", "get", "{{coachId}}"]
            },
            "description": "For: Admin. Get coach details by id."
          },
          "response": []
        },
        {
          "name": "Admin: Change Status (PUT /admin/change-status/:id)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminAccessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"verified\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/coach/admin/change-status/{{coachId}}",
              "host": ["{{baseUrl}}"],
              "path": ["coach", "admin", "change-status", "{{coachId}}"]
            },
            "description": "For: Admin. Change coach status (unverified|pending|verified)."
          },
          "response": []
        },
        {
          "name": "Admin: Block/Unblock Coach (PUT /admin/is-block/:id)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminAccessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"isBlocked\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/coach/admin/is-block/{{coachId}}",
              "host": ["{{baseUrl}}"],
              "path": ["coach", "admin", "is-block", "{{coachId}}"]
            },
            "description": "For: Admin. Set isBlocked true/false."
          },
          "response": []
        }
      ]
    },
    {
      "name": "Activities",
      "item": [
        {
          "name": "Get activities (root) — public",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/activities",
              "host": ["{{baseUrl}}"],
              "path": ["activities"],
              "query": []
            },
            "description": "For: Public (no auth). Returns all root activities (layer 1 / contains_subactivities flag). If you pass ?parent_id={{id}} or call GET /activities/{{id}} it will return children of that parent. Controller: activitiesController.list or activitiesService.list (open endpoint)."
          },
          "response": []
        },
        {
          "name": "Get sub-activities by parent id (public) — path param",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/activities/{{parentId}}",
              "host": ["{{baseUrl}}"],
              "path": ["activities", "{{parentId}}"]
            },
            "description": "For: Public. Returns activities whose parent_id = :parentId (layer 2). Equivalent to GET /activities?parent_id={{parentId}}."
          },
          "response": []
        },
        {
          "name": "Create activity (root or sub) — ADMIN",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminAccessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Meditation Basics\"\n}\n\n// To create a sub-activity under a parent use:\n// {\n//   \"title\": \"Breathing Techniques\",\n//   \"parent_id\": \"<parent_activity_id>\"\n// }\n"
            },
            "url": {
              "raw": "{{baseUrl}}/activities",
              "host": ["{{baseUrl}}"],
              "path": ["activities"]
            },
            "description": "For: Admin only. Single endpoint that handles both root and sub-activity creation. If request body contains only `title` then a root (layer=1) activity is created. If request contains `title` and `parent_id` then a layer=2 subactivity is created and the parent activity's `contains_subtopic` is set to true. Required permission: activities:add (add this key to your permissionConfig or map to an existing permission). Controller: activitiesController.addActivityOrSubActivity -> activitiesService.addActivityService / addSubActivity."
          },
          "response": []
        },
        {
          "name": "Create sub-activity (explicit) — ADMIN (alternate)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminAccessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"parent_id\": \"{{parentId}}\",\n  \"title\": \"Breathing Techniques\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/activities/add-subactivity",
              "host": ["{{baseUrl}}"],
              "path": ["activities", "add-subactivity"]
            },
            "description": "For: Admin only. Explicitly create a sub-activity under parent_id. Controller: activitiesController.addSubActivity -> activitiesService.addSubActivity. Required permission: activities:add."
          },
          "response": []
        },
        {
          "name": "Update activity title — ADMIN",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminAccessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Updated Activity Title\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/activities/{{id}}",
              "host": ["{{baseUrl}}"],
              "path": ["activities", "{{id}}"]
            },
            "description": "For: Admin only. Update the activity title by id. Request body must contain `title`. Controller: activitiesController.update (implement or map to activitiesService.update). Required permission: activities:update."
          },
          "response": []
        },
        {
          "name": "Delete activity (and all its sub-activities) — ADMIN",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminAccessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/activities/{{id}}",
              "host": ["{{baseUrl}}"],
              "path": ["activities", "{{id}}"]
            },
            "description": "For: Admin only. Delete activity by id. If you delete a parent activity, all children (sub-activities where parent_id = deleted id) must be deleted as well. Controller: activitiesController.delete -> activitiesService.delete (ensure cascade deletion). Required permission: activities:delete."
          },
          "response": []
        },
        {
          "name": "Search / list activities (public) with query and pagination",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/activities/search?q=meditation&page=1&limit=20",
              "host": ["{{baseUrl}}"],
              "path": ["activities", "search"],
              "query": [
                {
                  "key": "q",
                  "value": "meditation"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                }
              ]
            },
            "description": "For: Public. Optional search over title, returns both root and sub-activities matched. Supports `q`, `page`, `limit`. Implement in service: activitiesService.search(q, page, limit)."
          },
          "response": []
        },
        {
          "name": "Example: Create root activity (sample response)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminAccessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Meditation Basics\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/activities",
              "host": ["{{baseUrl}}"],
              "path": ["activities"]
            },
            "description": "Example request. Sample successful response:\n\n{\n  \"message\": \"Activity created successfully\",\n  \"data\": {\n    \"_id\": \"6123abcd...\",\n    \"title\": \"Meditation Basics\",\n    \"layer\": 1,\n    \"parent_id\": null,\n    \"contains_subtopic\": false,\n    \"createdAt\": \"2025-xx-xxT...\",\n    \"updatedAt\": \"2025-xx-xxT...\"\n  }\n}\n\nIf created as sub-activity, `layer` will be 2 and `parent_id` will contain parent id."
          },
          "response": []
        }
      ]
    }
  ]
}
